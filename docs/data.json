{
    "project": {},
    "files": {
        "js/array-2d.js": {
            "name": "js/array-2d.js",
            "modules": {},
            "classes": {
                "Array2d": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/console.js": {
            "name": "js/console.js",
            "modules": {},
            "classes": {
                "Console": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/entity-manager.js": {
            "name": "js/entity-manager.js",
            "modules": {},
            "classes": {
                "EntityManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/entity.js": {
            "name": "js/entity.js",
            "modules": {},
            "classes": {
                "Entity": 1,
                "Entity.Types": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/fov-rot.js": {
            "name": "js/fov-rot.js",
            "modules": {},
            "classes": {
                "FovROT": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/fov.js": {
            "name": "js/fov.js",
            "modules": {},
            "classes": {
                "Fov": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/game.js": {
            "name": "js/game.js",
            "modules": {},
            "classes": {
                "Game": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/input.js": {
            "name": "js/input.js",
            "modules": {},
            "classes": {
                "Input": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/lighting.js": {
            "name": "js/lighting.js",
            "modules": {},
            "classes": {
                "Lighting": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/mouse.js": {
            "name": "js/mouse.js",
            "modules": {},
            "classes": {
                "Mouse": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/player.js": {
            "name": "js/player.js",
            "modules": {},
            "classes": {
                "Player": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/renderer.js": {
            "name": "js/renderer.js",
            "modules": {},
            "classes": {
                "Renderer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/tile.js": {
            "name": "js/tile.js",
            "modules": {},
            "classes": {
                "Tile": 1,
                "Tile.Types": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/util.js": {
            "name": "js/util.js",
            "modules": {},
            "classes": {
                "Util": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Array2d": {
            "name": "Array2d",
            "shortname": "Array2d",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/array-2d.js",
            "line": 4,
            "description": "Manages a 2d array of x,y coords.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "width",
                    "description": "- Width of the 2d Array.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- Height of the 2d Array.",
                    "type": "Number"
                }
            ]
        },
        "Console": {
            "name": "Console",
            "shortname": "Console",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/console.js",
            "line": 3,
            "description": "Manages the display and history of console messages to the user.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- Game instance this obj is attached to.",
                    "type": "Game"
                },
                {
                    "name": "messageHistoryCount",
                    "description": "- Number of messages to display at once.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "5"
                },
                {
                    "name": "elClassName",
                    "description": "- Css class name to assign to the console element.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'console'"
                }
            ]
        },
        "EntityManager": {
            "name": "EntityManager",
            "shortname": "EntityManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/entity-manager.js",
            "line": 4,
            "description": "Manages the current state of all entities.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- Game instance this obj is attached to.",
                    "type": "Game"
                },
                {
                    "name": "width",
                    "description": "- Width of current map in tiles.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- Height of current map in tiles.",
                    "type": "Number"
                }
            ]
        },
        "Entity": {
            "name": "Entity",
            "shortname": "Entity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/entity.js",
            "line": 4,
            "description": "Represents an entity in the game. Usually a character or enemy.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- Game instance this obj is attached to.",
                    "type": "Game"
                },
                {
                    "name": "type",
                    "description": "- Type of entity. When created this object is merged with the value of Entity.Types[type].",
                    "type": "String"
                }
            ]
        },
        "Entity.Types": {
            "name": "Entity.Types",
            "shortname": "Entity.Types",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/entity.js",
            "line": 147,
            "description": "Describes different types of entities. Used by the Entity constructor 'type' param.\n\n    Entity.Types = {\n        zombie: {\n           name: 'Zombie',\n           char: 'z',\n           color: 'red',\n           bgColor: '#222',\n           pushable: false\n        },\n        // ...\n    }",
            "static": 1
        },
        "FovROT": {
            "name": "FovROT",
            "shortname": "FovROT",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/fov-rot.js",
            "line": 4,
            "description": "Represents a FovROT in the game map. requires ROT.js",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- Game instance this obj is attached to.",
                    "type": "Object"
                }
            ]
        },
        "Fov": {
            "name": "Fov",
            "shortname": "Fov",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/fov.js",
            "line": 4,
            "description": "Represents a Fov in the game map. requires ROT.js",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- Game instance this obj is attached to.",
                    "type": "Object"
                }
            ]
        },
        "Game": {
            "name": "Game",
            "shortname": "Game",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/game.js",
            "line": 4,
            "description": "Represents the game.",
            "is_constructor": 1
        },
        "Input": {
            "name": "Input",
            "shortname": "Input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/input.js",
            "line": 4,
            "description": "Helper for binding user key input to actions.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "onKeyAction",
                    "description": "- Function called when a key bound to an action is pressed (function(action){}).",
                    "type": "Function"
                },
                {
                    "name": "bindings",
                    "description": "- An object of key val pairs mapping an action to an array of keys that trigger it. Input.Keys is used to convert input key string names to key codes.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "action1",
                            "description": "Input keys mapped to action1. ['A', 'B', ...]",
                            "type": "Array"
                        },
                        {
                            "name": "action2",
                            "description": "Input keys mapped to action2. ['X', 'Y', ...]",
                            "type": "Array"
                        },
                        {
                            "name": "...",
                            "description": ""
                        }
                    ]
                }
            ],
            "example": [
                "\n       //bindings param example:\n       {\n           up: ['UP_ARROW'],\n           down: ['DOWN_ARROW'],\n           left: ['LEFT_ARROW'],\n           right: ['RIGHT_ARROW'],\n       }"
            ]
        },
        "Lighting": {
            "name": "Lighting",
            "shortname": "Lighting",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/lighting.js",
            "line": 4,
            "description": "Represents lighting in the game map. requires ROT.js",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- Game instance this obj is attached to.",
                    "type": "Game"
                },
                {
                    "name": "settings",
                    "description": "Lighting settings object.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "range",
                            "description": "- Maximum range for the most powerful light source.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "passes",
                            "description": "- Number of computation passes (1: no reflectivity used, 2: reflectivity used)",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "emissionThreshold",
                            "description": "- Minimal amount of light at a cell to be re-emited (only for passes>1).",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Mouse": {
            "name": "Mouse",
            "shortname": "Mouse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/mouse.js",
            "line": 4,
            "description": "Helper for handling user mouse input.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- game instance this obj is attached to.",
                    "type": "Game"
                },
                {
                    "name": "onTileClick",
                    "description": "- A function to handle tile mouse click events. function(tile){}",
                    "type": "Function",
                    "props": [
                        {
                            "name": "tile",
                            "description": "Tile object clicked.",
                            "type": "Tile"
                        }
                    ]
                },
                {
                    "name": "onTileHover",
                    "description": "- A function to handle tile mouse hover events. function(tile){}",
                    "type": "Function",
                    "props": [
                        {
                            "name": "tile",
                            "description": "Tile object hovered.",
                            "type": "Tile"
                        }
                    ]
                }
            ]
        },
        "Player": {
            "name": "Player",
            "shortname": "Player",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/player.js",
            "line": 4,
            "description": "Represents the player.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- game instance this obj is attached to",
                    "type": "Game"
                }
            ]
        },
        "Renderer": {
            "name": "Renderer",
            "shortname": "Renderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/renderer.js",
            "line": 4,
            "description": "Responsible for rendering the state of the game map.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- Game instance this obj is attached to.",
                    "type": "Game"
                },
                {
                    "name": "width",
                    "description": "- Width of the map view in tiles.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- Height of the map view in tiles.",
                    "type": "Number"
                },
                {
                    "name": "canvasClassName",
                    "description": "- Css class name for the canvas element.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'renderer'"
                }
            ]
        },
        "Tile": {
            "name": "Tile",
            "shortname": "Tile",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/tile.js",
            "line": 4,
            "description": "Represents a tile in the game map",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "- Game instance this obj is attached to.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "- Type of tile. When created this object is merged with the value of Tile.Types[type].",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "- The map tile coordinate position of this tile on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The map tile coordinate position of this tile on the y axis.",
                    "type": "Number"
                }
            ]
        },
        "Tile.Types": {
            "name": "Tile.Types",
            "shortname": "Tile.Types",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/tile.js",
            "line": 118,
            "description": "Describes different types of tiles. Used by the Tile constructor 'type' param.\n\n    Tile.Types = {\n        floor: {\n           name: 'Floor',\n           char: '.',\n           color: '#333',\n           bgColor: '#111',\n           passable: true,\n           blocksLos: false\n        },\n        // ...\n    }",
            "static": 1
        },
        "Util": {
            "name": "Util",
            "shortname": "Util",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/util.js",
            "line": 4,
            "description": "Utility functions",
            "is_constructor": 1,
            "static": 1
        }
    },
    "classitems": [
        {
            "file": "js/array-2d.js",
            "line": 20,
            "description": "Width of the 2d Array.",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "Array2d"
        },
        {
            "file": "js/array-2d.js",
            "line": 27,
            "description": "Height of the 2d Array.",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "Array2d"
        },
        {
            "file": "js/array-2d.js",
            "line": 34,
            "description": "2d Array data",
            "itemtype": "property",
            "name": "data",
            "type": "Array",
            "class": "Array2d"
        },
        {
            "file": "js/array-2d.js",
            "line": 41,
            "description": "Resets the 2d array, clearing all data and initializing with this.width and this.height.",
            "itemtype": "method",
            "name": "reset",
            "class": "Array2d"
        },
        {
            "file": "js/array-2d.js",
            "line": 52,
            "description": "Updates the size of this Array2d without destroying data",
            "itemtype": "method",
            "name": "setSize",
            "class": "Array2d"
        },
        {
            "file": "js/array-2d.js",
            "line": 66,
            "description": "Sets a value at given coords.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "x",
                    "description": "- Position on the x axis of the value being set.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- Position on the y axis of the value being set.",
                    "type": "Number"
                },
                {
                    "name": "value",
                    "description": "- The value being set at given coords.",
                    "type": "Mixed"
                }
            ],
            "class": "Array2d"
        },
        {
            "file": "js/array-2d.js",
            "line": 80,
            "description": "Gets a value from given coords.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "x",
                    "description": "- Position on the x axis of the value being retrieved.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- Position on the y axis of the value being retrieved.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "class": "Array2d"
        },
        {
            "file": "js/array-2d.js",
            "line": 94,
            "description": "Removes a value from given coords.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "x",
                    "description": "- Position on the x axis of the value being removed.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- Position on the y axis of the value being removed.",
                    "type": "Number"
                }
            ],
            "class": "Array2d"
        },
        {
            "file": "js/array-2d.js",
            "line": 103,
            "description": "Retrieves an array of values of adjacent coords.",
            "itemtype": "method",
            "name": "getAdjacent",
            "params": [
                {
                    "name": "x",
                    "description": "- Position on the x axis of the coord to get adjacent values of.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- Position on the x axis of the coord to get adjacent values of.",
                    "type": "Number"
                },
                {
                    "name": "withCoords",
                    "description": "- If true the returned array will include the coords of each value ([{x: 0, y: 0, value: 1}, ...])",
                    "type": "Bool"
                },
                {
                    "name": "filter",
                    "description": "- A function to filter the values returned (function(value, x, y){ return true;})",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "An array of adjacent coord values.",
                "type": "Array"
            },
            "class": "Array2d"
        },
        {
            "file": "js/array-2d.js",
            "line": 177,
            "description": "Retrieves an array of values of coords within a given radius.",
            "itemtype": "method",
            "name": "getWithinSquareRadius",
            "params": [
                {
                    "name": "x",
                    "description": "- Position on the x axis of the coord at the center of the radius.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- Position on the x axis of the coord at the center of the radius.",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "- Radius of the area to retrieve tiles from.",
                    "type": "Number"
                },
                {
                    "name": "withCoords",
                    "description": "- If true the returned array will include the coords of each value ([{x: 0, y: 0, value: 1}, ...])",
                    "type": "Bool",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "filter",
                    "description": "- A function to filter the values returned (function(value, x, y){ return true;})",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "undefined"
                },
                {
                    "name": "includeTarget",
                    "description": "- If true the value of the coordinates given will be included in the returned array.",
                    "type": "Bool",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "An array of coord values within a square radius of the given coords.",
                "type": "Array"
            },
            "class": "Array2d"
        },
        {
            "file": "js/array-2d.js",
            "line": 235,
            "description": "Retrieves an array of values of coords along a line starting at point 0 and crossing point 1 until it hits the edge of the 2d array or a coord value returning true when passed to the condtion function.",
            "itemtype": "method",
            "name": "getLineTo",
            "params": [
                {
                    "name": "x0",
                    "description": "- Position on the x axis of the coord 0.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "- Position on the y axis of the coord 0.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "- Position on the x axis of the coord 1.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "- Position on the y axis of the coord 1.",
                    "type": "Number"
                },
                {
                    "name": "condition",
                    "description": "- A function to determine when to end the line. A coord value returning true when passed to the function will end the line. (function(value, x, y){ return true;})",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "withCoords",
                    "description": "- If true the returned array will include the coords of each value ([{x: 0, y: 0, value: 1}, ...])",
                    "type": "Bool",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "An array of coord values.",
                "type": "Array"
            },
            "class": "Array2d"
        },
        {
            "file": "js/array-2d.js",
            "line": 290,
            "description": "Retrieves an array of the nearest coord values meeting checked requirements. If multiple coord values were matched at the same nearest distance, the returned array will contain multiple matched coord values.\nUsed for projecting path of ranged attacks, pushed entities, ect.",
            "itemtype": "method",
            "name": "findNearest",
            "params": [
                {
                    "name": "tileX",
                    "description": "- Position on the x axis of the coord at the center of the radius.",
                    "type": "Number"
                },
                {
                    "name": "tileY",
                    "description": "- Position on the y axis of the coord at the center of the radius.",
                    "type": "Number"
                },
                {
                    "name": "maxRadius",
                    "description": "- Maxium search radius from given coord.",
                    "type": "Number"
                },
                {
                    "name": "check",
                    "description": "- A function to determine when the desired coord value is matched. A coord value returning true when passed to the function would be added to the list of results. (function(value, x, y){ return true;})",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "withCoords",
                    "description": "- If true the returned array will include the coords of each value ([{x: 0, y: 0, value: 1}, ...])",
                    "type": "Bool",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "An array of coord values within a square radius of the given coords.",
                "type": "Array"
            },
            "class": "Array2d"
        },
        {
            "file": "js/array-2d.js",
            "line": 383,
            "description": "Retrieves an array of the filtered values.",
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "check",
                    "description": "- A function to determine if a value is to be included in results (returns true). (function(value, x, y){ return true;})",
                    "type": "Function"
                },
                {
                    "name": "withCoords",
                    "description": "- If true the returned array will include the coords of each value ([{x: 0, y: 0, value: 1}, ...])",
                    "type": "Bool",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "An array of coord values matched by the check function.",
                "type": "Array"
            },
            "class": "Array2d"
        },
        {
            "file": "js/array-2d.js",
            "line": 412,
            "description": "Creates a copy of this Array2d. Shallow copies values.",
            "itemtype": "method",
            "name": "copy",
            "return": {
                "description": "",
                "type": "Array2d"
            },
            "class": "Array2d"
        },
        {
            "file": "js/array-2d.js",
            "line": 430,
            "description": "Loops over each coord value.",
            "itemtype": "method",
            "name": "each",
            "params": [
                {
                    "name": "func",
                    "description": "- A function to call on each coord value. (function(value, x, y){})",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "- Context to call the function with (func.call(context, val, x, y))",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Array2d"
            },
            "class": "Array2d"
        },
        {
            "file": "js/console.js",
            "line": 20,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Console"
        },
        {
            "file": "js/console.js",
            "line": 27,
            "description": "Element containing console messages.\nMust be manually added to the DOM",
            "itemtype": "property",
            "name": "el",
            "type": "HTMLElement",
            "class": "Console"
        },
        {
            "file": "js/console.js",
            "line": 35,
            "description": "Number of messages to display at once.",
            "itemtype": "property",
            "name": "messageHistoryCount",
            "type": "Number",
            "class": "Console"
        },
        {
            "file": "js/console.js",
            "line": 42,
            "description": "Adds a message to the console.",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "-",
                    "description": "Message to be added.",
                    "type": "String"
                }
            ],
            "class": "Console"
        },
        {
            "file": "js/entity-manager.js",
            "line": 21,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "EntityManager"
        },
        {
            "file": "js/entity-manager.js",
            "line": 28,
            "description": "Array containing all entities.",
            "itemtype": "property",
            "name": "entities",
            "type": "Array",
            "class": "EntityManager"
        },
        {
            "file": "js/entity-manager.js",
            "line": 35,
            "description": "Array2d containing all entities by their current map tile coord",
            "itemtype": "property",
            "name": "entityMap",
            "type": "Array2d",
            "class": "EntityManager"
        },
        {
            "file": "js/entity-manager.js",
            "line": 42,
            "description": "Retrieves an entity by map tile coords.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "x",
                    "description": "- The map tile coordinate position of the entity on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The map tile coordinate position of the entity on the y axis.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Entity|false"
            },
            "class": "EntityManager"
        },
        {
            "file": "js/entity-manager.js",
            "line": 53,
            "description": "Adds an entity to the manager.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "x",
                    "description": "- The map tile coordinate position of the entity on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The map tile coordinate position of the entity on the y axis.",
                    "type": "Number"
                },
                {
                    "name": "ent",
                    "description": "- The entity to be added.",
                    "type": "Entity"
                }
            ],
            "class": "EntityManager"
        },
        {
            "file": "js/entity-manager.js",
            "line": 68,
            "description": "Removes an entity to the manager.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "ent",
                    "description": "- The entity to be removed.",
                    "type": "Entity"
                }
            ],
            "class": "EntityManager"
        },
        {
            "file": "js/entity-manager.js",
            "line": 79,
            "description": "Changes the position of an entity already added to this entityManager.",
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "x",
                    "description": "- The new map tile coordinate position of the entity on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The new map tile coordinate position of the entity on the y axis.",
                    "type": "Number"
                },
                {
                    "name": "ent",
                    "description": "- The entity to be removed.",
                    "type": "Entity"
                }
            ],
            "class": "EntityManager"
        },
        {
            "file": "js/entity-manager.js",
            "line": 93,
            "description": "Calls the entity.update() method on all entities. Removes dead entities. Typically called after a player has resolved their actions.",
            "itemtype": "method",
            "name": "update",
            "class": "EntityManager"
        },
        {
            "file": "js/entity-manager.js",
            "line": 109,
            "description": "Resets this entityManager.",
            "itemtype": "method",
            "name": "reset",
            "class": "EntityManager"
        },
        {
            "file": "js/entity-manager.js",
            "line": 118,
            "description": "Sets the size of the map to manage entities within.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- Width of current map in tiles.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- Height of current map in tiles.",
                    "type": "Number"
                }
            ],
            "class": "EntityManager"
        },
        {
            "file": "js/entity.js",
            "line": 27,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Entity"
        },
        {
            "file": "js/entity.js",
            "line": 34,
            "description": "The type of entity this is.\nWhen created this object is merged with the value of Entity.Types[type].",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "Entity"
        },
        {
            "file": "js/entity.js",
            "line": 42,
            "description": "Name used when referencing describing this entity.\nUsed in console messages.",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "Entity"
        },
        {
            "file": "js/entity.js",
            "line": 50,
            "description": "The map tile coordinate position of the entity on the x axis.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Entity"
        },
        {
            "file": "js/entity.js",
            "line": 57,
            "description": "The map tile coordinate position of the entity on the y axis.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Entity"
        },
        {
            "file": "js/entity.js",
            "line": 64,
            "description": "The character displayed when rendering this entity.",
            "itemtype": "property",
            "name": "char",
            "type": "String",
            "class": "Entity"
        },
        {
            "file": "js/entity.js",
            "line": 71,
            "description": "The color of the character displayed when rendering this entity. Not rendered if false.",
            "itemtype": "property",
            "name": "color",
            "type": "String|bool",
            "class": "Entity"
        },
        {
            "file": "js/entity.js",
            "line": 78,
            "description": "The background color the character displayed when rendering this entity. Not rendered if false.",
            "itemtype": "property",
            "name": "bgColor",
            "type": "String|bool",
            "class": "Entity"
        },
        {
            "file": "js/entity.js",
            "line": 85,
            "description": "Determines if this entity has been killed and needs to be removed.",
            "itemtype": "property",
            "name": "dead",
            "type": "bool",
            "class": "Entity"
        },
        {
            "file": "js/entity.js",
            "line": 92,
            "description": "Determines if this entity can be pushed by the player.",
            "itemtype": "property",
            "name": "pushable",
            "type": "bool",
            "class": "Entity"
        },
        {
            "file": "js/entity.js",
            "line": 99,
            "description": "Called after a player action has been resolved. Resolves this entities turn.",
            "itemtype": "method",
            "name": "update",
            "class": "Entity"
        },
        {
            "file": "js/entity.js",
            "line": 107,
            "description": "Changes the position of this entity on the map.",
            "itemtype": "method",
            "name": "moveTo",
            "class": "Entity"
        },
        {
            "file": "js/entity.js",
            "line": 115,
            "description": "Handles the behavior of a player or other entity attempting to move into the tile coord this entity is currently occupying.",
            "itemtype": "method",
            "name": "bump",
            "params": [
                {
                    "name": "entity",
                    "description": "- The player or entity attemplting to move into this entity's tile.",
                    "type": "Entity"
                }
            ],
            "class": "Entity"
        },
        {
            "file": "js/fov-rot.js",
            "line": 20,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "FovROT"
        },
        {
            "file": "js/fov-rot.js",
            "line": 27,
            "description": "Array2d storing fovROT visibility fovMap",
            "itemtype": "property",
            "name": "fovMap",
            "type": "Array2d",
            "class": "FovROT"
        },
        {
            "file": "js/fov-rot.js",
            "line": 34,
            "description": "Field Range of view 90, 180, or 360.",
            "itemtype": "property",
            "name": "fieldRange",
            "type": "Number",
            "class": "FovROT"
        },
        {
            "file": "js/fov-rot.js",
            "line": 41,
            "description": "Direction of fov (used as default) (not used for fieldRange 360) valid directions: ['up', 'down', 'left', 'right', 'up_left', 'up_right', 'down_left', 'down_right'].",
            "itemtype": "property",
            "name": "fieldRange",
            "type": "String",
            "class": "FovROT"
        },
        {
            "file": "js/fov-rot.js",
            "line": 48,
            "description": "Max visible distance in tiles",
            "itemtype": "property",
            "name": "maxViewDistance",
            "type": "Number",
            "class": "FovROT"
        },
        {
            "file": "js/fov-rot.js",
            "line": 55,
            "description": "Validates a fieldRange value.",
            "itemtype": "method",
            "name": "validateFieldRange",
            "params": [
                {
                    "name": "fieldRange",
                    "description": "- Field Range of view 90, 180, or 360.",
                    "type": "Number"
                }
            ],
            "class": "FovROT"
        },
        {
            "file": "js/fov-rot.js",
            "line": 68,
            "description": "Converts a string direction to an rot",
            "itemtype": "method",
            "name": "validateDirection",
            "params": [
                {
                    "name": "direction",
                    "description": "- Direction of fov (used as default) (not used for fieldRange 360) valid directions: ['up', 'down', 'left', 'right', 'up_left', 'up_right', 'down_left', 'down_right'].",
                    "type": "String"
                }
            ],
            "class": "FovROT"
        },
        {
            "file": "js/fov-rot.js",
            "line": 91,
            "description": "Calculates the fovROT data relative to given coords;",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "x",
                    "description": "- The map coordinate position to calculate FovROT from on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The map coordinate position to calculate FovROT from on the y axis.",
                    "type": "Number"
                },
                {
                    "name": "[fieldRange",
                    "description": "= 360] - Field Range of view 90, 180, or 360.",
                    "type": "Number"
                },
                {
                    "name": "[direction",
                    "description": "= 'up'] - Direction of fov (not used for fieldRange 360) valid directions: ['up', 'down', 'left', 'right', 'up_left', 'up_right', 'down_left', 'down_right'];.",
                    "type": "String|ROT.DIRS[8].x"
                },
                {
                    "name": "maxViewDistance",
                    "description": "- Max visible distance in tiles. (this.maxViewDistance used if not set)",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "visibleCallback",
                    "description": "- Function called on each visible tile (function(x, y, range, visibility){}).",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "FovROT"
        },
        {
            "file": "js/fov-rot.js",
            "line": 153,
            "description": "Retrieves the visibility of the tile at given coords",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "x",
                    "description": "- The map coordinate position to get FovROT visibility from on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The map coordinate position to get FovROT visibility from on the y axis.",
                    "type": "Number"
                }
            ],
            "class": "FovROT"
        },
        {
            "file": "js/fov-rot.js",
            "line": 163,
            "description": "Checks if a tile blocks line of sight",
            "itemtype": "method",
            "name": "checkMapTileVisible",
            "class": "FovROT"
        },
        {
            "file": "js/fov-rot.js",
            "line": 172,
            "description": "Sets the size of the map to mange fovROT within.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- Width of current map in tiles.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- Height of current map in tiles.",
                    "type": "Number"
                }
            ],
            "class": "FovROT"
        },
        {
            "file": "js/fov.js",
            "line": 18,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Fov"
        },
        {
            "file": "js/fov.js",
            "line": 26,
            "description": "Array2d storing fov visibility fovMap",
            "itemtype": "property",
            "name": "fovMap",
            "type": "Array2d",
            "class": "Fov"
        },
        {
            "file": "js/fov.js",
            "line": 34,
            "description": "Max visible distance in tiles",
            "itemtype": "property",
            "name": "maxViewDistance",
            "type": "Number",
            "class": "Fov"
        },
        {
            "file": "js/fov.js",
            "line": 41,
            "description": "Calculates the fov data relative to given coords;",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "x",
                    "description": "- The map coordinate position to calculate Fov from on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The map coordinate position to calculate Fov from on the y axis.",
                    "type": "Number"
                },
                {
                    "name": "maxViewDistance",
                    "description": "- Max visible distance (this.maxViewDistance used if not set).",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "Fov"
        },
        {
            "file": "js/fov.js",
            "line": 76,
            "description": "Retrieves the visibility of the tile at given coords",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "x",
                    "description": "- The map coordinate position to get Fov visibility from on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The map coordinate position to get Fov visibility from on the y axis.",
                    "type": "Number"
                }
            ],
            "class": "Fov"
        },
        {
            "file": "js/fov.js",
            "line": 86,
            "description": "Checks if a tile blocks line of sight",
            "itemtype": "method",
            "name": "checkMapTileVisible",
            "class": "Fov"
        },
        {
            "file": "js/fov.js",
            "line": 95,
            "description": "Checks if an unobstructed line can be drawn from coords 0 to 1. Typically used for Line of Sight checks",
            "itemtype": "method",
            "name": "checkLos",
            "params": [
                {
                    "name": "x0",
                    "description": "- Start coord x.",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "- Start coord y.",
                    "type": "Number"
                },
                {
                    "name": "x1",
                    "description": "- End coord x.",
                    "type": "Number"
                },
                {
                    "name": "y1",
                    "description": "- End coord y.",
                    "type": "Number"
                }
            ],
            "class": "Fov"
        },
        {
            "file": "js/fov.js",
            "line": 144,
            "description": "Sets the size of the map to mange fov within.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- Width of current map in tiles.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- Height of current map in tiles.",
                    "type": "Number"
                }
            ],
            "class": "Fov"
        },
        {
            "file": "js/game.js",
            "line": 35,
            "description": "The current map.",
            "itemtype": "property",
            "name": "map",
            "type": "Array2d",
            "class": "Game"
        },
        {
            "file": "js/game.js",
            "line": 42,
            "description": "The current entityManager.",
            "itemtype": "property",
            "name": "entityManager",
            "type": "EntityManager",
            "class": "Game"
        },
        {
            "file": "js/game.js",
            "line": 49,
            "description": "The current Fov.",
            "itemtype": "property",
            "name": "fov",
            "type": "Fov",
            "class": "Game"
        },
        {
            "file": "js/game.js",
            "line": 56,
            "description": "The current Lighting.",
            "itemtype": "property",
            "name": "lighting",
            "type": "Lighting",
            "class": "Game"
        },
        {
            "file": "js/game.js",
            "line": 63,
            "description": "The current renderer.",
            "itemtype": "property",
            "name": "renderer",
            "type": "Renderer",
            "class": "Game"
        },
        {
            "file": "js/game.js",
            "line": 70,
            "description": "The current console.",
            "itemtype": "property",
            "name": "console",
            "type": "Console",
            "class": "Game"
        },
        {
            "file": "js/game.js",
            "line": 77,
            "description": "The current player.",
            "itemtype": "property",
            "name": "player",
            "type": "Player",
            "class": "Game"
        },
        {
            "file": "js/game.js",
            "line": 84,
            "description": "The current input.",
            "itemtype": "property",
            "name": "input",
            "type": "Input",
            "class": "Game"
        },
        {
            "file": "js/game.js",
            "line": 91,
            "description": "The current mouse.",
            "itemtype": "property",
            "name": "mouse",
            "type": "Mouse",
            "class": "Game"
        },
        {
            "file": "js/game.js",
            "line": 98,
            "description": "Sets the size of the map resizing this.map and this.entityManager.",
            "itemtype": "method",
            "name": "setMapSize",
            "params": [
                {
                    "name": "width",
                    "description": "- Width in tilse to set map and entityManager to.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- Height in tilse to set map and entityManager to.",
                    "type": "Number"
                }
            ],
            "class": "Game"
        },
        {
            "file": "js/game.js",
            "line": 111,
            "description": "Starts the game.",
            "itemtype": "method",
            "name": "start",
            "class": "Game"
        },
        {
            "file": "js/game.js",
            "line": 123,
            "description": "Handler for user input actions.",
            "itemtype": "method",
            "name": "onKeyAction",
            "params": [
                {
                    "name": "action",
                    "description": "- Action triggered by user input.",
                    "type": "String"
                }
            ],
            "class": "Game"
        },
        {
            "file": "js/game.js",
            "line": 136,
            "description": "Handler for user mouse tile click.",
            "itemtype": "method",
            "name": "onTileClick",
            "params": [
                {
                    "name": "tile",
                    "description": "- The tile clicked.",
                    "type": "Tile"
                }
            ],
            "class": "Game"
        },
        {
            "file": "js/game.js",
            "line": 152,
            "description": "Handler for user mouse tile hover.",
            "itemtype": "method",
            "name": "onTileHover",
            "params": [
                {
                    "name": "tile",
                    "description": "- The tile hovered.",
                    "type": "Tile"
                }
            ],
            "class": "Game"
        },
        {
            "file": "js/input.js",
            "line": 39,
            "description": "An object of key val pairs mapping keyCode to action",
            "itemtype": "property",
            "name": "bindings",
            "type": "Object",
            "class": "Input"
        },
        {
            "file": "js/input.js",
            "line": 46,
            "description": "Function called when a key bound to an action is pressed (function(action){}).",
            "itemtype": "property",
            "name": "onKeyAction",
            "type": "Function",
            "class": "Input"
        },
        {
            "file": "js/input.js",
            "line": 53,
            "description": "Bind a user action to a key input",
            "itemtype": "method",
            "name": "bindAction",
            "params": [
                {
                    "name": "action",
                    "description": "- The action to bind the key to.",
                    "type": "String"
                },
                {
                    "name": "keyName",
                    "description": "- The keyname to bind the action to. @see Input.Keys",
                    "type": "String"
                }
            ],
            "class": "Input"
        },
        {
            "file": "js/input.js",
            "line": 64,
            "description": "Converts a user input key code to an action bound to that key or false if none is bound.",
            "itemtype": "method",
            "name": "getActionFromKeyCode",
            "params": [
                {
                    "name": "keyCode",
                    "description": "- The key code to retrieve an action bound to.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "String|bool The action bound to the keyCode or false."
            },
            "class": "Input"
        },
        {
            "file": "js/input.js",
            "line": 77,
            "description": "Event handler for document.onkeydown. Triggered when a key is pressed.\nIf an action is bound to the key pressed, false is returned to cancel the default browser behavior of the keypress.\nIf an action is not bound to the key pressed, true is returned allowing the default browser behavior of the keypress to function.",
            "itemtype": "method",
            "name": "onKeyDown",
            "params": [
                {
                    "name": "event",
                    "description": "- The onkeydown event.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "Input"
        },
        {
            "file": "js/input.js",
            "line": 99,
            "description": "Loads multiple action key bindings",
            "itemtype": "method",
            "name": "addBindings",
            "params": [
                {
                    "name": "bindings",
                    "description": "- An object of key val pairs mapping an action to an array of keys that trigger it. Input.Keys is used to convert input key string names to key codes.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "action1",
                            "description": "Input keys mapped to action1. ['A', 'B', ...]",
                            "type": "Array"
                        },
                        {
                            "name": "action2",
                            "description": "Input keys mapped to action2. ['X', 'Y', ...]",
                            "type": "Array"
                        },
                        {
                            "name": "...",
                            "description": ""
                        }
                    ]
                }
            ],
            "example": [
                "\n           //bindings param example:\n           {\n               up: ['UP_ARROW'],\n               down: ['DOWN_ARROW'],\n               left: ['LEFT_ARROW'],\n               right: ['RIGHT_ARROW'],\n           }"
            ],
            "class": "Input"
        },
        {
            "file": "js/input.js",
            "line": 126,
            "static": 1,
            "itemtype": "property",
            "name": "Keys",
            "type": "{Object}",
            "class": "Input"
        },
        {
            "file": "js/lighting.js",
            "line": 37,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Lighting"
        },
        {
            "file": "js/lighting.js",
            "line": 45,
            "description": "Array2d storing Lighting data.",
            "itemtype": "property",
            "name": "LightingMap",
            "type": "Array2d",
            "class": "Lighting"
        },
        {
            "file": "js/lighting.js",
            "line": 53,
            "description": "Reflectivity of visible tiles.",
            "itemtype": "property",
            "name": "reflectivity",
            "type": "Number",
            "class": "Lighting"
        },
        {
            "file": "js/lighting.js",
            "line": 61,
            "description": "Ambient light",
            "itemtype": "property",
            "name": "ambientLight",
            "type": "Array",
            "class": "Lighting"
        },
        {
            "file": "js/lighting.js",
            "line": 69,
            "description": "ROT.FOV instance",
            "itemtype": "property",
            "name": "_fov",
            "access": "private",
            "tagname": "",
            "type": "ROT.FOV",
            "class": "Lighting"
        },
        {
            "file": "js/lighting.js",
            "line": 78,
            "description": "ROT.Lighting instance",
            "itemtype": "property",
            "name": "_lighting",
            "access": "private",
            "tagname": "",
            "type": "ROT.Lighting",
            "class": "Lighting"
        },
        {
            "file": "js/lighting.js",
            "line": 87,
            "description": "Calculates the Lighting data relative to given coords;",
            "itemtype": "method",
            "name": "update",
            "class": "Lighting"
        },
        {
            "file": "js/lighting.js",
            "line": 119,
            "description": "Retrieves the visibility of the tile at given coords",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "x",
                    "description": "- The map coordinate position to get Lighting visibility from on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The map coordinate position to get Lighting visibility from on the y axis.",
                    "type": "Number"
                }
            ],
            "class": "Lighting"
        },
        {
            "file": "js/lighting.js",
            "line": 129,
            "description": "Set a light position and color",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "x",
                    "description": "- The map coordinate position to set lightin on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- The map coordinate position to set lightin on the y axis.",
                    "type": "Number"
                },
                {
                    "name": "r",
                    "description": "- Red.",
                    "type": "Number"
                },
                {
                    "name": "g",
                    "description": "- Green.",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "- Blue.",
                    "type": "Number"
                }
            ],
            "class": "Lighting"
        },
        {
            "file": "js/lighting.js",
            "line": 142,
            "description": "Returns the reflectivity value of a tile",
            "itemtype": "method",
            "name": "getTileReflectivity",
            "class": "Lighting"
        },
        {
            "file": "js/lighting.js",
            "line": 153,
            "description": "Checks if a tile blocks line of sight",
            "itemtype": "method",
            "name": "checkVisible",
            "class": "Lighting"
        },
        {
            "file": "js/lighting.js",
            "line": 162,
            "description": "Sets the size of the map to mange Lighting within.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "- Width of current map in tiles.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "- Height of current map in tiles.",
                    "type": "Number"
                }
            ],
            "class": "Lighting"
        },
        {
            "file": "js/mouse.js",
            "line": 30,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Mouse"
        },
        {
            "file": "js/mouse.js",
            "line": 37,
            "description": "A function to handle tile mouse click events",
            "itemtype": "method",
            "name": "onTileClick",
            "params": [
                {
                    "name": "tile",
                    "description": "- Tile object clicked.",
                    "type": "Tile"
                }
            ],
            "class": "Mouse"
        },
        {
            "file": "js/mouse.js",
            "line": 44,
            "description": "Current mouse x axis coord relative to upper left corner of mapview element.",
            "itemtype": "property",
            "name": "mapViewMouseX",
            "type": "Number",
            "class": "Mouse"
        },
        {
            "file": "js/mouse.js",
            "line": 50,
            "description": "Current mouse y axis coord relative to upper left corner of mapview element.",
            "itemtype": "property",
            "name": "mapViewMouseY",
            "type": "Number",
            "class": "Mouse"
        },
        {
            "file": "js/mouse.js",
            "line": 57,
            "description": "True if mouse is currently over mapview.",
            "itemtype": "property",
            "name": "mapViewMouseOver",
            "type": "Bool",
            "class": "Mouse"
        },
        {
            "file": "js/mouse.js",
            "line": 64,
            "description": "Hander for mouse events",
            "itemtype": "method",
            "name": "handleEvent",
            "params": [
                {
                    "name": "e",
                    "description": "- mouse event",
                    "type": "Event"
                }
            ],
            "class": "Mouse"
        },
        {
            "file": "js/mouse.js",
            "line": 85,
            "description": "Hander for mouse click events",
            "itemtype": "method",
            "name": "mouseClick",
            "params": [
                {
                    "name": "e",
                    "description": "- mouse event",
                    "type": "Event"
                }
            ],
            "class": "Mouse"
        },
        {
            "file": "js/mouse.js",
            "line": 99,
            "description": "Hander for mouse enter events",
            "itemtype": "method",
            "name": "mouseEnter",
            "params": [
                {
                    "name": "e",
                    "description": "- mouse event",
                    "type": "Event"
                }
            ],
            "class": "Mouse"
        },
        {
            "file": "js/mouse.js",
            "line": 108,
            "description": "Hander for mouse leave events",
            "itemtype": "method",
            "name": "mouseLeave",
            "params": [
                {
                    "name": "e",
                    "description": "- mouse event",
                    "type": "Event"
                }
            ],
            "class": "Mouse"
        },
        {
            "file": "js/mouse.js",
            "line": 119,
            "description": "Hander for mouse move events",
            "itemtype": "method",
            "name": "mouseMove",
            "params": [
                {
                    "name": "e",
                    "description": "- mouse event",
                    "type": "Event"
                }
            ],
            "class": "Mouse"
        },
        {
            "file": "js/player.js",
            "line": 17,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Player"
        },
        {
            "file": "js/player.js",
            "line": 24,
            "description": "Name used when referencing describing this player.\nUsed in console messages.",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "Player"
        },
        {
            "file": "js/player.js",
            "line": 32,
            "description": "The map tile coordinate position of the player on the x axis.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Player"
        },
        {
            "file": "js/player.js",
            "line": 39,
            "description": "The map tile coordinate position of the player on the y axis.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Player"
        },
        {
            "file": "js/player.js",
            "line": 46,
            "description": "The character displayed when rendering this player.",
            "itemtype": "property",
            "name": "char",
            "type": "String",
            "class": "Player"
        },
        {
            "file": "js/player.js",
            "line": 53,
            "description": "The color of the character displayed when rendering this player.",
            "itemtype": "property",
            "name": "color",
            "type": "String|bool",
            "class": "Player"
        },
        {
            "file": "js/player.js",
            "line": 60,
            "description": "The background color the character displayed when rendering this player.",
            "itemtype": "property",
            "name": "bgColor",
            "type": "String|bool",
            "class": "Player"
        },
        {
            "file": "js/player.js",
            "line": 67,
            "description": "Called when user key is pressed with action of key pressed as an arg.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "action",
                    "description": "- action bound to key pressed by user",
                    "type": "String"
                }
            ],
            "class": "Player"
        },
        {
            "file": "js/player.js",
            "line": 126,
            "description": "Changes the position of this entity on the map.",
            "itemtype": "method",
            "name": "moveTo",
            "class": "Player"
        },
        {
            "file": "js/renderer.js",
            "line": 27,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 34,
            "description": "Canvas element this renderer draws to.",
            "itemtype": "property",
            "name": "canvas",
            "type": "HTMLCanvasElement",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 41,
            "description": "Drawing context of this.canvas",
            "itemtype": "property",
            "name": "ctx",
            "type": "CanvasRenderingContext2D",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 48,
            "description": "Canvas element this renderer draws to as a buffer for this.canvas.",
            "itemtype": "property",
            "name": "buffer",
            "type": "HTMLCanvasElement",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 55,
            "description": "Drawing context of this.buffer",
            "itemtype": "property",
            "name": "bufferCtx",
            "type": "CanvasRenderingContext2D",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 62,
            "description": "Background color of map view.",
            "itemtype": "property",
            "name": "bgColor",
            "type": "String",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 69,
            "description": "Color overlayed when mouse is over a tile.",
            "itemtype": "property",
            "name": "hoverColor",
            "type": "String",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 76,
            "description": "Size of each tile is drawn.",
            "itemtype": "property",
            "name": "tileSize",
            "type": "Number",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 83,
            "description": "Font used to render tile characters.",
            "itemtype": "property",
            "name": "font",
            "type": "String",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 90,
            "description": "Map view width in tiles.",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 97,
            "description": "Map view height in tiles.",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 104,
            "description": "Distance in tiles from center to upper left corner of map view on the x axis.",
            "itemtype": "property",
            "name": "offsetX",
            "type": "Number",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 111,
            "description": "Distance in tiles from center to upper left corner of map view on the y axis.",
            "itemtype": "property",
            "name": "offsetY",
            "type": "Number",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 118,
            "description": "The map coord of the tile drawn in the upper left corner of the map view on the x axis.",
            "itemtype": "property",
            "name": "originX",
            "type": "Number",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 125,
            "description": "The map coord of the tile drawn in the upper left corner of the map view on the y axis.",
            "itemtype": "property",
            "name": "originY",
            "type": "Number",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 132,
            "description": "The map coord of the tile currently being hovered by the mouse on the x axis.",
            "itemtype": "property",
            "name": "hoveredTileX",
            "type": "Number|Null",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 139,
            "description": "The map coord of the tile currently being hovered by the mouse on the y axis.",
            "itemtype": "property",
            "name": "hoveredTileY",
            "type": "Number|Null",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 146,
            "description": "Resizes canvas elements to match the tileSize and map view with/height. Also adjusts behavior to accomodate high pixel density screens.",
            "itemtype": "method",
            "name": "resize",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 189,
            "description": "Converts mouse pixel coords to map tile coords. Mouse pixel coords must be relative to the current window.",
            "itemtype": "method",
            "name": "mouseToTileCoords",
            "params": [
                {
                    "name": "x",
                    "description": "- Mouse pixel coord on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- Mouse pixel coord on the y axis.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Tile|False"
            },
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 204,
            "description": "Converts map view pixel coords to map tile coords. Map view pixel coords are relative to the top left of the canvas element.",
            "itemtype": "method",
            "name": "pixelToTileCoords",
            "params": [
                {
                    "name": "x",
                    "description": "- Map view pixel coord on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- Map view pixel coord on the y axis.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Tile|False"
            },
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 223,
            "description": "Draws the current game state to the map view.",
            "itemtype": "method",
            "name": "draw",
            "class": "Renderer"
        },
        {
            "file": "js/renderer.js",
            "line": 322,
            "description": "Draws a single tile to the map view.",
            "itemtype": "method",
            "name": "drawTile",
            "params": [
                {
                    "name": "x",
                    "description": "- Map tile coord on the x axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- Map tile coord on the y axis.",
                    "type": "Number"
                },
                {
                    "name": "tileData",
                    "description": "- Object containing tile draw settings.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "char",
                            "description": "- The character to draw.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "- The color of the character displayed.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "bgColor",
                            "description": "- The background color of the tile.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "ctx",
                    "description": "- The canvas context to draw to.",
                    "type": "CanvasRenderingContext2D",
                    "optional": true,
                    "optdefault": "this.bufferCtx"
                }
            ],
            "class": "Renderer"
        },
        {
            "file": "js/tile.js",
            "line": 34,
            "description": "Game instance this obj is attached to.",
            "itemtype": "property",
            "name": "game",
            "type": "Game",
            "class": "Tile"
        },
        {
            "file": "js/tile.js",
            "line": 42,
            "description": "The type of entity this is.\nWhen created this object is merged with the value of Tile.Types[type].",
            "itemtype": "property",
            "name": "type",
            "type": "Object",
            "class": "Tile"
        },
        {
            "file": "js/tile.js",
            "line": 50,
            "description": "If this tile has been explored by the player.",
            "itemtype": "property",
            "name": "explored",
            "type": "Bool",
            "class": "Tile"
        },
        {
            "file": "js/tile.js",
            "line": 57,
            "description": "If entities can move through this tile.",
            "itemtype": "property",
            "name": "passable",
            "type": "Bool",
            "class": "Tile"
        },
        {
            "file": "js/tile.js",
            "line": 64,
            "description": "If this tile blocks line of sight.",
            "itemtype": "property",
            "name": "passable",
            "type": "Bool",
            "class": "Tile"
        },
        {
            "file": "js/tile.js",
            "line": 71,
            "description": "The tile map coordinate position on the x axis.",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "Tile"
        },
        {
            "file": "js/tile.js",
            "line": 78,
            "description": "The tile map coordinate position on the y axis.",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "Tile"
        },
        {
            "file": "js/tile.js",
            "line": 85,
            "description": "The character displayed when rendering this tile.",
            "itemtype": "property",
            "name": "char",
            "type": "String",
            "class": "Tile"
        },
        {
            "file": "js/tile.js",
            "line": 92,
            "description": "The color of the character displayed when rendering this tile. Not rendered if false.",
            "itemtype": "property",
            "name": "color",
            "type": "String|bool",
            "class": "Tile"
        },
        {
            "file": "js/tile.js",
            "line": 99,
            "description": "The background color the character displayed when rendering this tile. Not rendered if false.",
            "itemtype": "property",
            "name": "bgColor",
            "type": "String|bool",
            "class": "Tile"
        },
        {
            "file": "js/tile.js",
            "line": 106,
            "description": "Handles the behavior of a player or other entity attempting to move into this tile. Only used if this.passable = false.",
            "itemtype": "method",
            "name": "bump",
            "params": [
                {
                    "name": "entity",
                    "description": "- The player or entity attemplting to move into this tile.",
                    "type": "Object"
                }
            ],
            "class": "Tile"
        },
        {
            "file": "js/util.js",
            "line": 11,
            "description": "Merges settings with default values.",
            "itemtype": "method",
            "name": "merge",
            "params": [
                {
                    "name": "defaults",
                    "description": "- Default values to merge with.",
                    "type": "Object"
                },
                {
                    "name": "settings",
                    "description": "- Settings to merge with default values.",
                    "type": "Object"
                }
            ],
            "class": "Util"
        }
    ],
    "warnings": []
}